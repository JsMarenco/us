---
// Third-party dependencies
import type { User } from "@prisma/client";

// Current project dependencies
import timeAgo from "../../../utils/timeAgo";
import ShareButton from "./ShareButton";
import { defaultAvatar } from "../../../constants";

type Props = {
  writtenAt: string;
  creator: User;
  views?: number;
  isAnonymous?: boolean;
};

const { writtenAt, creator, isAnonymous } = Astro.props;
const currentUrl = Astro.url;
---

<div
  class="mt-4 grid grid-cols-2 items-center gap-3 border-t border-gray-300 pt-4 text-sm text-gray-600 dark:border-gray-600 dark:text-gray-400"
>
  <div
    class="col-span-2 flex items-center justify-center gap-2 overflow-hidden md:col-span-1 md:justify-start"
  >
    <span class="font-medium text-gray-700 dark:text-gray-300">Autor:</span>

    {
      isAnonymous ? (
        <span class="truncate text-gray-500 italic dark:text-gray-400">
          Anónimo
        </span>
      ) : (
        <a
          class="flex min-w-0 items-center gap-2 rounded-lg bg-gray-100/50 px-3 py-1 transition hover:bg-gray-200/70 dark:bg-gray-800/50 dark:hover:bg-gray-700/60"
          href={`/u/${creator.username}`}
        >
          <img
            alt={creator.username}
            class="h-6 w-6 flex-shrink-0 rounded-full border border-white dark:border-gray-600"
            src={defaultAvatar(creator.avatarSrc, creator.username)}
          />
          <span
            class="truncate font-medium text-gray-900 dark:text-gray-100"
            title={
              creator.firstName || creator.lastName
                ? `${creator.firstName ?? ""} ${creator.lastName ?? ""}`.trim()
                : creator.username
            }
          >
            {creator.firstName || creator.lastName
              ? `${creator.firstName ?? ""} ${creator.lastName ?? ""}`.trim()
              : creator.username}
          </span>
        </a>
      )
    }
  </div>

  <div
    class="col-span-2 flex items-center justify-center gap-2 overflow-hidden md:col-span-1 md:justify-end"
  >
    <span class="font-medium text-gray-700 dark:text-gray-300">
      Publicado:
    </span>
    <strong class="truncate text-gray-900 dark:text-gray-100">
      {writtenAt ? `${timeAgo(writtenAt)}` : "Fecha desconocida"}
    </strong>
  </div>

  <div class="col-span-2 mt-3 flex justify-center gap-4">
    <ShareButton client:load url={String(currentUrl)}>
      Copiar enlace
    </ShareButton>

    <a
      class="inline-block rounded-lg border border-gray-400 px-3 py-2 text-sm font-medium text-gray-800 transition-colors hover:border-teal-500 hover:text-teal-600 dark:border-gray-600 dark:text-gray-200 dark:hover:border-teal-400 dark:hover:text-teal-400"
      href={`/u/${creator.username}`}
    >
      {
        `Ver más de ${
          creator.firstName || creator.lastName
            ? `${creator.firstName ?? ""} ${creator.lastName ?? ""}`.trim()
            : creator.username
        }`
      }
    </a>
  </div>
</div>
